type UserType {
  _id: String
  username: String
  email: String

  karkunId: String
  displayName: String
  locked: Boolean
  lastLoggedInAt: String
  lastActiveAt: String
  permissions: [String]
  instances: [String]

  karkun: KarkunType
}

type PagedUserType {
  totalResults: Int
  data: [UserType]
}

input UserFilter {
  showLocked: String
  showUnlocked: String
  showActive: String
  showInactive: String
  moduleAccess: String
  portalAccess: String
  pageIndex: String
  pageSize: String
}

extend type Query {
  pagedUsers(filter: UserFilter): PagedUserType
  userById(_id: String): UserType
  currentUser: UserType
  userNames(ids: [String]): [String]
}

extend type Mutation {
  createUser(
    userName: String!
    password: String!
    email: String
    displayName: String
    karkunId: String
  ): UserType

  updateUser(
    userId: String!
    password: String
    email: String
    displayName: String
    locked: Boolean
  ): UserType

  setPermissions(
    userId: String!
    permissions: [String]!
  ): UserType

  setInstanceAccess(
    userId: String!
    instances: [String]!
  ): UserType

  updateLoginTime: Int
  updateLastActiveTime: Int
}
