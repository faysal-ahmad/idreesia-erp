input MessageKarkunFilter {
  filterTarget: String
  name: String
  cnicNumber: String
  phoneNumber: String
  bloodGroup: String
  lastTarteeb: String
  attendance: String
  jobId: String
  dutyId: String
  dutyShiftId: String
  cityId: String
  cityMehfilId: String
  region: String
}

type MessageKarkunFilterType {
  filterTarget: String
  name: String
  cnicNumber: String
  phoneNumber: String
  bloodGroup: String
  lastTarteeb: String
  attendance: String
  jobId: String
  dutyId: String
  dutyShiftId: String
  cityId: String
  cityMehfilId: String
  region: String
}

type MessageType {
  _id: String
  source: String
  messageBody: String
  karkunFilters: [MessageKarkunFilterType]
  status: String
  sentDate: String
  msKarkunIds: [String]
  outstationKarkunIds: [String]
  visitorIds: [String]

  msKarkunCount: Int
  outstationKarkunCount: Int
  visitorCount: Int

  approvedOn: String
  approvedBy: String
  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type PagedMessageType {
  totalResults: Int
  data: [MessageType]
}

input MessageFilter {
  pageIndex: String
  pageSize: String
  startDate: String
  endDate: String
}

extend type Query {
  pagedMSKarkunMessageRecepients(filter: MessageKarkunFilter!): PagedKarkunType
  @checkPermissions(permissions: [HR_VIEW_MESSAGES, HR_MANAGE_MESSAGES, HR_APPROVE_MESSAGES])

  pagedOutstationKarkunMessageRecepients(filter: MessageKarkunFilter!): PagedKarkunType
  @checkPermissions(permissions: [HR_VIEW_MESSAGES, HR_MANAGE_MESSAGES, HR_APPROVE_MESSAGES])

  pagedVisitorMessageRecepients(filter: MessageKarkunFilter!): PagedVisitorType
  @checkPermissions(permissions: [HR_VIEW_MESSAGES, HR_MANAGE_MESSAGES, HR_APPROVE_MESSAGES])
}
