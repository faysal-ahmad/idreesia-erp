type VisitorType {
  _id: String
  name: String
  parentName: String
  cnicNumber: String
  ehadDate: String
  birthDate: String
  referenceName: String
  contactNumber1: String
  contactNumber2: String
  address: String
  city: String
  country: String
  imageId: String
  karkunId: String
  dataSource: String
  criminalRecord: String
  otherNotes: String

  image: Attachment

  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type PagedVisitorType {
  totalResults: Int
  data: [VisitorType]
}

input VisitorFilter {
  name: String
  cnicNumber: String
  phoneNumber: String
  city: String
  ehadDuration: String
  ehadDate: String
  additionalInfo: String
  dataSource: String
  updatedBetween: String
  pageIndex: String
  pageSize: String
}

extend type Query {
  pagedVisitors(filter: VisitorFilter): PagedVisitorType
  distinctCities: [String]
  distinctCountries: [String]
}

extend type Mutation {
  fixCitySpelling(existingSpelling: String!, newSpelling: String!): Int
}