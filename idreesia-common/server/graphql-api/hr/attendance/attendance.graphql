type AttendanceType {
  _id: String
  karkunId: String
  dutyId: String
  shiftId: String
  jobId: String
  month: String
  attendanceDetails: String
  presentCount: Int
  lateCount: Int
  absentCount: Int
  percentage: Float
  meetingCardBarcodeId: String

  karkun: KarkunType
  job: JobType
  duty: DutyType
  shift: DutyShiftType

  createdByName: String
  updatedByName: String

  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

extend type Query {
  attendanceById(_id: String!): AttendanceType
  attendanceByKarkun(
    karkunId: String!
  ): [AttendanceType]
  attendanceByMonth(
    month: String!
    categoryId: String
    subCategoryId: String
  ): [AttendanceType]
  attendanceByBarcodeId(barcodeId: String!): AttendanceType
  attendanceByBarcodeIds(barcodeIds: String!): [AttendanceType]
}

extend type Mutation {
  createAttendances(
    month: String!
  ): Int

  updateAttendance(
    _id: String!
    attendanceDetails: String
    presentCount: Int
    lateCount: Int
    absentCount: Int
  ): AttendanceType

  uploadAttendances(
    csv: String!
    dutyId: String!
    month: String!
    shiftId: String
  ): Int

  deleteAttendances(month: String!, ids: [String]!): Int
  deleteAllAttendances(month: String!): Int
}
