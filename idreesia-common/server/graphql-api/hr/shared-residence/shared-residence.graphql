type HRSharedResidenceType {
  _id: String
  name: String
  address: String
  ownerKarkunId: String

  residentCount: Int
  owner: KarkunType
  residents: [KarkunType]

  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type PagedHRSharedResidenceType {
  totalResults: Int
  data: [HRSharedResidenceType]
}

extend type Query {
  allHRSharedResidences: [HRSharedResidenceType]
  pagedHRSharedResidences(queryString: String): PagedHRSharedResidenceType
  hrSharedResidenceById(_id: String!): HRSharedResidenceType
}

extend type Mutation {
  createHRSharedResidence(name: String!, address: String, ownerKarkunId: String): HRSharedResidenceType
  updateHRSharedResidence(_id: String!, name: String!, address: String, ownerKarkunId: String): HRSharedResidenceType
  removeHRSharedResidence(_id: String!): Int
}
