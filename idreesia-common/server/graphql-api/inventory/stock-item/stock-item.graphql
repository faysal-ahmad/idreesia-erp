type StockItem {
  _id: String
  name: String
  company: String
  details: String
  unitOfMeasurement: String
  categoryId: String
  imageId: String
  physicalStoreId: String
  startingStockLevel: Float
  minStockLevel: Float
  currentStockLevel: Float
  totalStockLevel: Float
  verifiedOn: String

  formattedName: String
  categoryName: String
  purchaseFormsCount: Float
  issuanceFormsCount: Float
  stockAdjustmentsCount: Float

  refPhysicalStore: PhysicalStore

  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type PagedStockItem {
  totalResults: Int
  data: [StockItem]
}

type InventoryStatistics {
  physicalStoreId: String
  itemsWithImages: Int
  itemsWithoutImages: Int
  itemsWithPositiveStockLevel: Int
  itemsWithLessThanMinStockLevel: Int
  itemsWithNegativeStockLevel: Int
  itemsVerifiedLessThanThreeMonthsAgo: Int
  itemsVerifiedThreeToSixMonthsAgo: Int
  itemsVerifiedMoreThanSixMonthsAgo: Int
}

extend type Query {
  pagedStockItems(physicalStoreId: String!, queryString: String): PagedStockItem
  stockItemById(_id: String!): StockItem
  stockItemsById(physicalStoreId: String!, _ids: [String]!): [StockItem]

  statistics(physicalStoreId: String!): InventoryStatistics
}

extend type Mutation {
  createStockItem(
    name: String!
    company: String
    details: String
    unitOfMeasurement: String!
    categoryId: String!
    physicalStoreId: String!
    minStockLevel: Float
    currentStockLevel: Float
  ): StockItem

  updateStockItem(
    _id: String!
    name: String!
    company: String
    details: String
    unitOfMeasurement: String!
    categoryId: String!
    minStockLevel: Float
  ): StockItem

  verifyStockItemLevel(_id: String!, physicalStoreId: String!): StockItem
  removeStockItem(_id: String!, physicalStoreId: String!): Int
  setStockItemImage(_id: String!, imageId: String!): StockItem
  mergeStockItems(ids: [String]!, physicalStoreId: String!): StockItem
  recalculateStockLevels(ids: [String]!, physicalStoreId: String!): [StockItem]
}
