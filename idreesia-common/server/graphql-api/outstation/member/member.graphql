extend type Query {
  pagedOutstationMembers(filter: VisitorFilter): PagedVisitorType
  @checkPermissions(permissions: [OUTSTATION_VIEW_MEMBERS, OUTSTATION_MANAGE_MEMBERS])

  outstationMemberById(_id: String!): VisitorType
  @checkPermissions(permissions: [OUTSTATION_VIEW_MEMBERS, OUTSTATION_MANAGE_MEMBERS])
}

extend type Mutation {
  importOutstationMember(
    name: String!
    parentName: String
    cnicNumber: String
    contactNumber1: String
    cityId: String
    ehadDate: String
    birthDate: String
    referenceName: String
  ): String
  @checkPermissions(permissions: [OUTSTATION_MANAGE_MEMBERS])

  createOutstationMember(
    name: String!
    parentName: String!
    cnicNumber: String
    ehadDate: String!
    birthDate: String
    referenceName: String!
    contactNumber1: String
    contactNumber2: String
    city: String
    country: String
    currentAddress: String
    permanentAddress: String
    educationalQualification: String
    meansOfEarning: String
    imageData: String
  ): VisitorType
  @checkPermissions(permissions: [OUTSTATION_MANAGE_MEMBERS])

  updateOutstationMember(
    _id: String!
    name: String!
    parentName: String!
    cnicNumber: String
    ehadDate: String!
    birthDate: String
    referenceName: String!
    contactNumber1: String
    contactNumber2: String
    city: String
    country: String
    currentAddress: String
    permanentAddress: String
    educationalQualification: String
    meansOfEarning: String
  ): VisitorType
  @checkPermissions(permissions: [OUTSTATION_MANAGE_MEMBERS])

  deleteOutstationMember(_id: String!): Int
  @checkPermissions(permissions: [OUTSTATION_MANAGE_MEMBERS])

  setOutstationMemberImage(_id: String!, imageId: String!): VisitorType
  @checkPermissions(permissions: [OUTSTATION_MANAGE_MEMBERS])
}
